%%Group Project Runge-Kutta
clear,clc
% Initial conditions
N = 1000; %Population
b = 0.3; %Rate of infection
g = 0.1; %Recovery rate
final = 100; %End time
%Step size
h = 1;

I(1) = 10; %infected population
S(1) = N-I(1); %susceptable population
R(1) = 0; %Recovered Population
n=1;
for n = 1:h:final-1 %Time Duration

%Susceptable population
k1 = -(b/N)*S(n)*I(n);
k2 = -(b/N)*(S(n)+((k1*h)/2))*(I(n)+((k1*h)/2));
k3 = -(b/N)*(S(n)+((k2*h)/2))*(I(n)+((k2*h)/2));
k4 = -(b/N)*(S(n)+((k3*h)))*(I(n)+((k3*h)));
S(n+1) = S(n) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);

%Infected population
k1 = (b/N)*S(n)*I(n) - g*I(n);
k2 = (b/N)*(S(n)+((k1*h)/2))*(I(n)+((k1*h)/2))- g*(I(n)+((k1*h)/2));
k3 = (b/N)*(S(n)+((k2*h)/2))*(I(n)+((k2*h)/2)) - g*(I(n)+((k2*h)/2));
k4 = (b/N)*(S(n)+((k3*h)))*(I(n)+((k3*h))) - g*(I(n)+k3*h);
I(n+1) = I(n) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);

%Recovered Population
k1 = g*I(n);
k2 = g*(I(n)+((k1*h)/2));
k3 = g*(I(n)+((k2*h)/2));
k4 = g*(I(n)+k3*h);
R(n+1) = R(n) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);
%n=n+1;
end

t=1:h:final;
figure(1);
plot(t,S,t,I,t,R)
title('Runge-Kutta',h)
xlabel('Time')
ylabel('Population')
legend({'S(t)','I(t)','R(t)'},'Location','northeast')

%%
%Interploation
%initial conditions
N = 1000; %Population
b = 0.3; %Rate of infection
g = 0.1; %Recovery rate
final = 100; %End time
%Step size
h = 2;
Ni=49; %Interpolated points
%Error Summation
TotS=0;
TotI=0;
TotR=0;
TotSq=0;
TotIq=0;
TotRq=0;
%linear inilialized
Ii(1) = 10; %infected population
Si(1) = N-Ii(1); %susceptable population
Ri(1) = 0; %Recovered Population
%Quadratic initialized
Iq(1) = 10; %infected population
Sq(1) = N-Ii(1); %susceptable population
Rq(1) = 0; %Recovered Population
t=1:h:final;

%Linear Interpolation
for n = 1:1:(final-1) %Time Duration
    if (-1)^n > 0   %if even RK4
%Susceptable population
k1 = -(b/N)*Si(n)*Ii(n);
k2 = -(b/N)*(Si(n)+((k1*h)/2))*(Ii(n)+((k1*h)/2));
k3 = -(b/N)*(Si(n)+((k2*h)/2))*(Ii(n)+((k2*h)/2));
k4 = -(b/N)*(Si(n)+((k3*h)))*(Ii(n)+((k3*h)));
Si(n+2) = Si(n) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);

%Infected population
k1 = (b/N)*Si(n)*Ii(n) - g*Ii(n);
k2 = (b/N)*(Si(n)+((k1*h)/2))*(Ii(n)+((k1*h)/2))- g*(Ii(n)+((k1*h)/2));
k3 = (b/N)*(Si(n)+((k2*h)/2))*(Ii(n)+((k2*h)/2)) - g*(Ii(n)+((k2*h)/2));
k4 = (b/N)*(Si(n)+((k3*h)))*(Ii(n)+((k3*h))) - g*(Ii(n)+k3*h);
Ii(n+2) = Ii(n) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);

%Recovered Population
k1 = g*Ii(n);
k2 = g*(Ii(n)+((k1*h)/2));
k3 = g*(Ii(n)+((k2*h)/2));
k4 = g*(Ii(n)+k3*h);
Ri(n+2) = Ri(n) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);
    elseif n==1   %if equal to 1 use RK4 to find day 2
%Susceptable population
k1 = -(b/N)*Si(n)*Ii(n);
k2 = -(b/N)*(Si(n)+((k1*h)/2))*(Ii(n)+((k1*h)/2));
k3 = -(b/N)*(Si(n)+((k2*h)/2))*(Ii(n)+((k2*h)/2));
k4 = -(b/N)*(Si(n)+((k3*h)))*(Ii(n)+((k3*h)));
Si(n+1) = Si(n) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);

%Infected population
k1 = (b/N)*Si(n)*Ii(n) - g*Ii(n);
k2 = (b/N)*(Si(n)+((k1*h)/2))*(Ii(n)+((k1*h)/2))- g*(Ii(n)+((k1*h)/2));
k3 = (b/N)*(Si(n)+((k2*h)/2))*(Ii(n)+((k2*h)/2)) - g*(Ii(n)+((k2*h)/2));
k4 = (b/N)*(Si(n)+((k3*h)))*(Ii(n)+((k3*h))) - g*(Ii(n)+k3*h);
Ii(n+1) = Ii(n) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);

%Recovered Population
k1 = g*Ii(n);
k2 = g*(Ii(n)+((k1*h)/2));
k3 = g*(Ii(n)+((k2*h)/2));
k4 = g*(Ii(n)+k3*h);
Ri(n+1) = Ri(n) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);
    elseif (-1)^n <0          %if odd and greater than 1 interpolate
    Si(n)=Si(n-1)+((Si(n+1)-Si(n-1))/((n+1)-(n-1)))*((n)-(n-1));
    Ii(n)=Ii(n-1)+((Ii(n+1)-Ii(n-1))/((n+2)-(n-1)))*((n)-(n-1));
    Ri(n)=Ri(n-1)+((Ri(n+1)-Ri(n-1))/((n+1)-(n-1)))*((n)-(n-1));
    TotS=(Si(n)-S(n))^2;
    TotI=(Ii(n)-I(n))^2;
    TotR=(Ri(n)-R(n))^2;
    end
end

%Quadratic Interpolation
for n = 1:1:(final-1) %Time Duration
    if (-1)^n > 0   %if even RK4
%Susceptable population
k1 = -(b/N)*Sq(n)*Ii(n);
k2 = -(b/N)*(Sq(n)+((k1*h)/2))*(Iq(n)+((k1*h)/2));
k3 = -(b/N)*(Sq(n)+((k2*h)/2))*(Iq(n)+((k2*h)/2));
k4 = -(b/N)*(Sq(n)+((k3*h)))*(Iq(n)+((k3*h)));
Sq(n+2) = Sq(n) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);

%Infected population
k1 = (b/N)*Sq(n)*Iq(n) - g*Iq(n);
k2 = (b/N)*(Sq(n)+((k1*h)/2))*(Iq(n)+((k1*h)/2))- g*(Iq(n)+((k1*h)/2));
k3 = (b/N)*(Sq(n)+((k2*h)/2))*(Iq(n)+((k2*h)/2)) - g*(Iq(n)+((k2*h)/2));
k4 = (b/N)*(Sq(n)+((k3*h)))*(Iq(n)+((k3*h))) - g*(Iq(n)+k3*h);
Iq(n+2) = Iq(n) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);

%Recovered Population
k1 = g*Iq(n);
k2 = g*(Iq(n)+((k1*h)/2));
k3 = g*(Iq(n)+((k2*h)/2));
k4 = g*(Iq(n)+k3*h);
Rq(n+2) = Rq(n) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);
    elseif n==1   %if equal to 1 use RK4 to find day 2
%Susceptable population
k1 = -(b/N)*Sq(n)*Iq(n);
k2 = -(b/N)*(Sq(n)+((k1*h)/2))*(Iq(n)+((k1*h)/2));
k3 = -(b/N)*(Sq(n)+((k2*h)/2))*(Iq(n)+((k2*h)/2));
k4 = -(b/N)*(Sq(n)+((k3*h)))*(Iq(n)+((k3*h)));
Sq(n+1) = Sq(n) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);

%Infected population
k1 = (b/N)*Sq(n)*Iq(n) - g*Iq(n);
k2 = (b/N)*(Sq(n)+((k1*h)/2))*(Iq(n)+((k1*h)/2))- g*(Iq(n)+((k1*h)/2));
k3 = (b/N)*(Sq(n)+((k2*h)/2))*(Iq(n)+((k2*h)/2)) - g*(Iq(n)+((k2*h)/2));
k4 = (b/N)*(Sq(n)+((k3*h)))*(Iq(n)+((k3*h))) - g*(Iq(n)+k3*h);
Iq(n+1) = Iq(n) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);

%Recovered Population
k1 = g*Iq(n);
k2 = g*(Iq(n)+((k1*h)/2));
k3 = g*(Iq(n)+((k2*h)/2));
k4 = g*(Iq(n)+k3*h);
Rq(n+1) = Ri(n) + (h/6)*(k1 + 2*k2 + 2*k3 + k4);
    elseif (-1)^n <0          %if odd and greater than 1 interpolate
    Sq(n)=((n-(n-1))*(n-(n+1))/(((n-2)-(n-1))*((n-2)-(n+1))))*Sq(n-2)+((n-(n-2))*(n-(n+1)))/(((n-1)-(n-2))*((n-1)-(n+1)))*Sq(n-1)+((n-(n-2))*(n-(n-1)))/((((n+1)-(n-2))*((n+1)-(n-1))))*Sq(n+1);
    Iq(n)=((n-(n-1))*(n-(n+1))/(((n-2)-(n-1))*((n-2)-(n+1))))*Iq(n-2)+((n-(n-2))*(n-(n+1)))/(((n-1)-(n-2))*((n-1)-(n+1)))*Iq(n-1)+((n-(n-2))*(n-(n-1)))/((((n+1)-(n-2))*((n+1)-(n-1))))*Iq(n+1);
    Rq(n)=((n-(n-1))*(n-(n+1))/(((n-2)-(n-1))*((n-2)-(n+1))))*Rq(n-2)+((n-(n-2))*(n-(n+1)))/(((n-1)-(n-2))*((n-1)-(n+1)))*Rq(n-1)+((n-(n-2))*(n-(n-1)))/((((n+1)-(n-2))*((n+1)-(n-1))))*Rq(n+1);
    TotSq=(Sq(n)-S(n))^2;
    TotIq=(Iq(n)-I(n))^2;
    TotRq=(Rq(n)-R(n))^2;
    end
end

%Errors
ES=sqrt(TotS/Ni);
EI=sqrt(TotI/Ni);
ER=sqrt(TotR/Ni);
ESq=sqrt(TotSq/Ni);
EIq=sqrt(TotIq/Ni);
ERq=sqrt(TotRq/Ni);

t=1:1:100;

figure(2);
subplot(1,2,1)
plot(t,Si,t,Ii,t,Ri)
sgtitle('Interpolation')
title('Linear Interpolation')
xlabel('Time')
ylabel('Population')
legend({'S(t)','I(t)','R(t)'},'Location','northeast')
subplot(1,2,2)
plot(t,Sq,t,Iq,t,Rq)
title('Quadratic Interpolation')
xlabel('Time')
ylabel('Population')
legend({'S(t)','I(t)','R(t)'},'Location','northeast')

%Table Variables
St = [ES;ESq];
It = [EI;EIq];
Rt = [ER;ERq];
Error = table(St,It,Rt)
%Linear interpolation was more accurate
