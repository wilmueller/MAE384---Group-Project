%%Group Project Runge-Kutta
clear,clc
% Initial conditions
N = 1000; %Population
b = .3; %Rate of infection
g = 0.1; %Recovery rate
final = 100; %End time
%Step size
h = 1;

I(1) = 10; %infected population
S(1) = N-I(1); %susceptable population
R(1) = 0; %Recovered Population
n=1;
for t=0:h:final %Time Duration

% K1
k1s = -(b/N)*S(n)*I(n);
k1i = ((b/N)*S(n)*I(n)) - (g*I(n));
k1r = g*I(n);

%K2
k2s = -(b/N)*(S(n)+(k1s*h*.5))*(I(n)+(k1i*h*.5));
k2i = ((b/N)*(S(n)+(k1s*h*.5))*(I(n)+(k1i*h*.5)))- (g*(I(n)+(k1i*h*.5)));
k2r = g*(I(n)+(k1i*h*.5));

%K3
k3s = -(b/N)*(S(n)+(k2s*h*.5))*(I(n)+(k2i*h*.5));
k3i = ((b/N)*(S(n)+(k2s*h*.5))*(I(n)+(k2i*h*.5))) - (g*(I(n)+(k2i*h*.5)));
k3r = g*(I(n)+(k2i*h*.5));

%K4
k4s = -(b/N)*(S(n)+(k3s*h))*(I(n)+(k3i*h));
k4i = ((b/N)*(S(n)+(k3s*h))*(I(n)+(k3i*h))) - (g*(I(n)+(k3i*h)));
k4r = g*(I(n)+k3i*h);

S(n+1) = S(n) + (h/6)*(k1s + 2*k2s + 2*k3s + k4s);
I(n+1) = I(n) + (h/6)*(k1i + 2*k2i + 2*k3i + k4i);
R(n+1) = R(n) + (h/6)*(k1r + 2*k2r + 2*k3r + k4r);

n=n+1;
end

t=0:h:final+h;
figure
plot(t,S,t,I,t,R)
title('Runge-Kutta (step size = 1)')
xlabel('Time')
ylabel('Population')
legend({'S(t)','I(t)','R(t)'},'Location','northeast')
%%
%Interploation
%initial conditions
N = 1000; %Population
b = 0.3; %Rate of infection
g = 0.1; %Recovery rate
final = 100; %End time
%Step size
h = 2;
Ni=49; %Interpolated points
%Error Summation
TotS=0;
TotI=0;
TotR=0;
TotSq=0;
TotIq=0;
TotRq=0;
%linear inilialized
Ii(1) = 10; %infected population
Si(1) = N-Ii(1); %susceptable population
Ri(1) = 0; %Recovered Population
%Quadratic initialized
Iq(1) = 10; %infected population
Sq(1) = N-Ii(1); %susceptable population
Rq(1) = 0; %Recovered Population
%t=1:h:final;

%Linear Interpolation
for n = 1:1:(final-1) %Time Duration
    if (-1)^n > 0   %if even RK4
% K1
k1s = -(b/N)*Si(n)*Ii(n);
k1i = ((b/N)*Si(n)*Ii(n)) - (g*Ii(n));
k1r = g*Ii(n);

%K2
k2s = -(b/N)*(Si(n)+(k1s*h*.5))*(Ii(n)+(k1i*h*.5));
k2i = ((b/N)*(Si(n)+(k1s*h*.5))*(Ii(n)+(k1i*h*.5)))- (g*(Ii(n)+(k1i*h*.5)));
k2r = g*(Ii(n)+(k1i*h*.5));

%K3
k3s = -(b/N)*(Si(n)+(k2s*h*.5))*(Ii(n)+(k2i*h*.5));
k3i = ((b/N)*(Si(n)+(k2s*h*.5))*(Ii(n)+(k2i*h*.5))) - (g*(Ii(n)+(k2i*h*.5)));
k3r = g*(Ii(n)+(k2i*h*.5));

%K4
k4s = -(b/N)*(Si(n)+(k3s*h))*(Ii(n)+(k3i*h));
k4i = ((b/N)*(Si(n)+(k3s*h))*(Ii(n)+(k3i*h))) - (g*(Ii(n)+(k3i*h)));
k4r = g*(Ii(n)+k3i*h);

Si(n+2) = Si(n) + (h/6)*(k1s + 2*k2s + 2*k3s + k4s);
Ii(n+2) = Ii(n) + (h/6)*(k1i + 2*k2i + 2*k3i + k4i);
Ri(n+2) = Ri(n) + (h/6)*(k1r + 2*k2r + 2*k3r + k4r);
    elseif n==1   %if equal to 1 use RK4 to find day 2
% K1
k1s = -(b/N)*Si(n)*Ii(n);
k1i = ((b/N)*Si(n)*Ii(n)) - (g*Ii(n));
k1r = g*Ii(n);

%K2
k2s = -(b/N)*(Si(n)+(k1s*h*.5))*(Ii(n)+(k1i*h*.5));
k2i = ((b/N)*(Si(n)+(k1s*h*.5))*(Ii(n)+(k1i*h*.5)))- (g*(Ii(n)+(k1i*h*.5)));
k2r = g*(Ii(n)+(k1i*h*.5));

%K3
k3s = -(b/N)*(Si(n)+(k2s*h*.5))*(Ii(n)+(k2i*h*.5));
k3i = ((b/N)*(Si(n)+(k2s*h*.5))*(Ii(n)+(k2i*h*.5))) - (g*(Ii(n)+(k2i*h*.5)));
k3r = g*(Ii(n)+(k2i*h*.5));

%K4
k4s = -(b/N)*(Si(n)+(k3s*h))*(Ii(n)+(k3i*h));
k4i = ((b/N)*(Si(n)+(k3s*h))*(Ii(n)+(k3i*h))) - (g*(Ii(n)+(k3i*h)));
k4r = g*(Ii(n)+k3i*h);

Si(n+1) = Si(n) + (h/6)*(k1s + 2*k2s + 2*k3s + k4s);
Ii(n+1) = Ii(n) + (h/6)*(k1i + 2*k2i + 2*k3i + k4i);
Ri(n+1) = Ri(n) + (h/6)*(k1r + 2*k2r + 2*k3r + k4r);
    elseif (-1)^n <0          %if odd and greater than 1 interpolate
    Si(n)=Si(n-1)+((Si(n+1)-Si(n-1))/((n+1)-(n-1)))*((n)-(n-1));
    Ii(n)=Ii(n-1)+((Ii(n+1)-Ii(n-1))/((n+2)-(n-1)))*((n)-(n-1));
    Ri(n)=Ri(n-1)+((Ri(n+1)-Ri(n-1))/((n+1)-(n-1)))*((n)-(n-1));
    TotS=(Si(n)-S(n))^2;
    TotI=(Ii(n)-I(n))^2;
    TotR=(Ri(n)-R(n))^2;
    end
end

%Quadratic Interpolation
for n = 1:1:(final-1) %Time Duration
    if (-1)^n > 0   %if even RK4
% K1
k1s = -(b/N)*Sq(n)*Iq(n);
k1i = ((b/N)*Sq(n)*Iq(n)) - (g*Iq(n));
k1r = g*Iq(n);

%K2
k2s = -(b/N)*(Sq(n)+(k1s*h*.5))*(Iq(n)+(k1i*h*.5));
k2i = ((b/N)*(Sq(n)+(k1s*h*.5))*(Iq(n)+(k1i*h*.5)))- (g*(Iq(n)+(k1i*h*.5)));
k2r = g*(Iq(n)+(k1i*h*.5));

%K3
k3s = -(b/N)*(Sq(n)+(k2s*h*.5))*(Iq(n)+(k2i*h*.5));
k3i = ((b/N)*(Sq(n)+(k2s*h*.5))*(Iq(n)+(k2i*h*.5))) - (g*(Iq(n)+(k2i*h*.5)));
k3r = g*(Iq(n)+(k2i*h*.5));

%K4
k4s = -(b/N)*(Sq(n)+(k3s*h))*(Iq(n)+(k3i*h));
k4i = ((b/N)*(Sq(n)+(k3s*h))*(Iq(n)+(k3i*h))) - (g*(Iq(n)+(k3i*h)));
k4r = g*(Iq(n)+k3i*h);

Sq(n+2) = Sq(n) + (h/6)*(k1s + 2*k2s + 2*k3s + k4s);
Iq(n+2) = Iq(n) + (h/6)*(k1i + 2*k2i + 2*k3i + k4i);
Rq(n+2) = Rq(n) + (h/6)*(k1r + 2*k2r + 2*k3r + k4r);
    elseif n==1   %if equal to 1 use RK4 to find day 2
% K1
k1s = -(b/N)*Sq(n)*Iq(n);
k1i = ((b/N)*Sq(n)*Iq(n)) - (g*Iq(n));
k1r = g*Iq(n);

%K2
k2s = -(b/N)*(Sq(n)+(k1s*h*.5))*(Iq(n)+(k1i*h*.5));
k2i = ((b/N)*(Sq(n)+(k1s*h*.5))*(Iq(n)+(k1i*h*.5)))- (g*(Iq(n)+(k1i*h*.5)));
k2r = g*(Iq(n)+(k1i*h*.5));

%K3
k3s = -(b/N)*(Sq(n)+(k2s*h*.5))*(Iq(n)+(k2i*h*.5));
k3i = ((b/N)*(Sq(n)+(k2s*h*.5))*(Iq(n)+(k2i*h*.5))) - (g*(Iq(n)+(k2i*h*.5)));
k3r = g*(Iq(n)+(k2i*h*.5));

%K4
k4s = -(b/N)*(Sq(n)+(k3s*h))*(Iq(n)+(k3i*h));
k4i = ((b/N)*(Sq(n)+(k3s*h))*(Iq(n)+(k3i*h))) - (g*(Iq(n)+(k3i*h)));
k4r = g*(Iq(n)+k3i*h);

Sq(n+1) = Sq(n) + (h/6)*(k1s + 2*k2s + 2*k3s + k4s);
Iq(n+1) = Iq(n) + (h/6)*(k1i + 2*k2i + 2*k3i + k4i);
Rq(n+1) = Rq(n) + (h/6)*(k1r + 2*k2r + 2*k3r + k4r);
    elseif (-1)^n <0          %if odd and greater than 1 interpolate
    Sq(n)=((n-(n-1))*(n-(n+1))/(((n-2)-(n-1))*((n-2)-(n+1))))*Sq(n-2)+((n-(n-2))*(n-(n+1)))/(((n-1)-(n-2))*((n-1)-(n+1)))*Sq(n-1)+((n-(n-2))*(n-(n-1)))/((((n+1)-(n-2))*((n+1)-(n-1))))*Sq(n+1);
    Iq(n)=((n-(n-1))*(n-(n+1))/(((n-2)-(n-1))*((n-2)-(n+1))))*Iq(n-2)+((n-(n-2))*(n-(n+1)))/(((n-1)-(n-2))*((n-1)-(n+1)))*Iq(n-1)+((n-(n-2))*(n-(n-1)))/((((n+1)-(n-2))*((n+1)-(n-1))))*Iq(n+1);
    Rq(n)=((n-(n-1))*(n-(n+1))/(((n-2)-(n-1))*((n-2)-(n+1))))*Rq(n-2)+((n-(n-2))*(n-(n+1)))/(((n-1)-(n-2))*((n-1)-(n+1)))*Rq(n-1)+((n-(n-2))*(n-(n-1)))/((((n+1)-(n-2))*((n+1)-(n-1))))*Rq(n+1);
    TotSq=(Sq(n)-S(n))^2;
    TotIq=(Iq(n)-I(n))^2;
    TotRq=(Rq(n)-R(n))^2;
    end
end

%Errors
ES=sqrt(TotS/Ni);
EI=sqrt(TotI/Ni);
ER=sqrt(TotR/Ni);
ESq=sqrt(TotSq/Ni);
EIq=sqrt(TotIq/Ni);
ERq=sqrt(TotRq/Ni);
%{
%Graphs(optional)
t=1:1:100;
figure(2);
subplot(1,2,1)
plot(t,Si,t,Ii,t,Ri)
sgtitle('Interpolation')
title('Linear Interpolation')
xlabel('Time')
ylabel('Population')
legend({'S(t)','I(t)','R(t)'},'Location','northeast')
subplot(1,2,2)
plot(t,Sq,t,Iq,t,Rq)
title('Quadratic Interpolation')
xlabel('Time')
ylabel('Population')
legend({'S(t)','I(t)','R(t)'},'Location','northeast')
%}
%Table Variables
St = [ES;ESq];
It = [EI;EIq];
Rt = [ER;ERq];
Error = table(St,It,Rt)
%Linear interpolation had smaller errors
